// Write a function word_unscrambler that takes two inputs: a scrambled word and a dictionary of real words.  Your program must then 
// output all words that our scrambled word can unscramble to.

// Hint: To see if a string `s1` is an anagram of `s2`, split both strings into arrays of letters. Sort the two arrays. If they are
// equal, then they are anagrams.

// Difficulty: 3/5

function anagramFinder(str) {
  var sortedWord = str.split("").sort().join("");
  return sortedWord;
}

function word_unscrambler(word, dictionary) {
  var arr = [];
  arr = dictionary.filter(function(element) {
    return anagramFinder(element) == anagramFinder(word);
  });
  return arr;
}

console.log("===============================================");
    console.log(word_unscrambler("cat", ["tac"])); // ==> ["tac"]
    console.log(word_unscrambler("cat", ["tom"])); // ==> []
    console.log(word_unscrambler("cat", ["tic", "toc", "tac", "toe"])) // ==> ["tac"]
    console.log(word_unscrambler("cat", ["scatter", "tac", "ca"])) // ==> ["tac"]
    console.log(word_unscrambler("turn", ["numb", "turn", "runt", "nurt"])) // ==> ["turn", "runt", "nurt"]
console.log("===============================================");
