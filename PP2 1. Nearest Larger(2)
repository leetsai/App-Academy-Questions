// Write a function, `nearest_larger(arr, i)` which takes an array and an index.  The function should return another index, 
// `j`: this should satisfy:

// (a) `arr[i] < arr[j]`, AND (b) there is no `j2` closer to `i` than `j` where `arr[i] < arr[j2]`.
// In case of ties (see example below), choose the earliest (left-most) of the two indices. If no number in `arr` is 
// larger than `arr[i]`, return `null`.

// Difficulty: 2/5

function nearest_larger(arr, index) {
  var spacing = 0;
  while((index + spacing)/2 <= arr.length) {
  	if(arr[index] < arr[index - spacing] && (arr[index - spacing] !== undefined)) {
  		return index - spacing;
  	} else if(arr[index] < arr[index + spacing] && arr[index + spacing] !== undefined) {
  		return index + spacing;
  	}
  	spacing++;
  }
  return null;
}

console.log("===============================================");
    console.log(nearest_larger([2,3,4,8], 2) === 3);
    console.log(nearest_larger([2,8,4,3], 2) === 1);
    console.log(nearest_larger([2,6,4,8], 2) === 1);
    console.log(nearest_larger([2,6,4,6], 2) === 1);
    console.log(nearest_larger([8,2,2,3], 3) === 0);
    console.log(nearest_larger([2,4,3,8], 1) === 3);
    console.log(nearest_larger([2, 6, 4, 8], 3) === null);
    console.log(nearest_larger([11, 6, 9, 10, 8], 2) === 3);
console.log("===============================================");
