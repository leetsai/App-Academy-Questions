// Build a function, `morse_encode(str)` that takes in a string (no numbers or punctuation) and outconsole.log the morse code for it. See
// http://en.wikipedia.org/wiki/Morse_code. Put two spaces between words and one space between letters.

// You'll have to type in morse code: I'd use a hash to map letters to codes. Don't worry about numbers.

// I wrote a helper method `morse_encode_word(word)` that handled a single word.

// Difficulty: 2/5

var morse = {
	a: ".-",
	b: "-...",
	c: "-.-.",
	d: "-..",
	e: ".",
	f: "..-.",
	g: "--.",
	h: "....",
	i: "..",
	j: ".---",
	k: "-.-",
	l: ".-..",
	m: "--",
	n: "-.",
	o: "---",
	p: ".--.",
	q: "--.-",
	r: ".-.",
	s: "...",
	t: "-",
	u: "..-",
	v: "...-",
	w: ".--",
	x: "-..-",
	y: "-.--",
	z: "--.."
};

function morse_encode(str) {
  var arr = [];
  for(var i = 0; i < str.length; i++) {
		if(morse[str[i]]) {
			arr.push(morse[str[i]]);
		} else {
			arr.push("");
		}
  }
  return arr.join(" ");
}  

// function morse_encode(str) {
//   var arr = str.split(""), newArr = [];
//   arr.map(function(key) {
//   	if(morse.hasOwnProperty(key)) {
//   		newArr.push(morse[key]);
//   	} else {
//   		newArr.push("");
//   	}
//   });
//   return newArr.join(" ");
// }

console.log("===============================================");
    console.log(morse_encode("q") == "--.-");
    console.log(morse_encode("cat") == "-.-. .- -");
    console.log(morse_encode("cat in hat") == "-.-. .- -  .. -.  .... .- -");
console.log("===============================================");
